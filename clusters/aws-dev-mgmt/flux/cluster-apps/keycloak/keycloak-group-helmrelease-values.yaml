# https://github.com/bitnami/charts/blob/master/bitnami/keycloak/values.yaml
global:
  storageClass: gp3
clusterDomain: ${CLUSTER_FQDN}
auth:
  adminUser: ${KEYCLOAK_ADMIN_USERNAME}
  adminPassword: ${KEYCLOAK_ADMIN_PASSWORD}
  managementUser: manager
  managementPassword: ${KEYCLOAK_ADMIN_PASSWORD}
extraStartupArgs: "-Dkeycloak.profile.feature.admin_fine_grained_authz=enabled"
service:
  type: ClusterIP
ingress:
  enabled: true
  ingressClassName: nginx
  hostname: keycloak.${CLUSTER_FQDN}
  annotations:
    forecastle.stakater.com/expose: "true"
    forecastle.stakater.com/icon: https://raw.githubusercontent.com/keycloak/keycloak-misc/8b1ff8f9b38ccefb5453af35d1b83a6471066f36/logo/keycloak_swag_wide.png
    forecastle.stakater.com/appName: Keycloak
  extraTls:
    - hosts:
        - keycloak.${CLUSTER_FQDN}
networkPolicy:
  enabled: false
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
keycloakConfigCli:
  enabled: true
  configuration:
    # https://github.com/adorsys/keycloak-config-cli/blob/main/src/test/resources/import-files/exported-realm/18.0.2/master-realm.json
    myrealm.yaml: |
      bruteForceProtected: true
      clients:
        # https://oauth2-proxy.github.io/oauth2-proxy/7.4.x/configuration/oauth_provider/#keycloak-auth-provider
        - clientId: oauth2-proxy-keycloak.${CLUSTER_FQDN}
          name: oauth2-proxy-keycloak.${CLUSTER_FQDN}
          description: "OAuth2 Proxy for Keycloak"
          secret: oauth2-proxy-keycloak-${OAUTH2_PROXY_SECRET}
          redirectUris:
            - "https://oauth2-proxy-keycloak.${CLUSTER_FQDN}/oauth2/callback"
          defaultClientScopes:
            - acr
            - email
            - myclientscope
            - profile
            - roles
            - web-origins
      clientScopes:
        - name: myclientscope
          description: My Client Scope
          protocol: openid-connect
          attributes:
            include.in.token.scope: "true"
            display.on.consent.screen: "true"
          protocolMappers:
            - name: oauth2-proxy-keycloak.${CLUSTER_FQDN}-audience
              protocol: openid-connect
              protocolMapper: oidc-audience-mapper
              config:
                included.client.audience: oauth2-proxy-keycloak.${CLUSTER_FQDN}
                included.custom.audience: oauth2-proxy-keycloak.${CLUSTER_FQDN}
                access.token.claim: "true"
      identityProviders:
        - providerId: google
          alias: google
          enabled: true
          config:
            syncMode: IMPORT
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
      displayName: My Realm
      enabled: true
      groups:
        - name: group-users
        - name: group-admins
        - name: group-test
      realm: myrealm
      rememberMe: true
      smtpServer:
        from: myrealm-keycloak@${CLUSTER_FQDN}
        fromDisplayName: Keycloak
        host: mailhog.mailhog.svc.cluster.local
        port: 1025
      userManagedAccessAllowed: true
      users:
        - username: myuser1
          email: myuser1@${CLUSTER_FQDN}
          emailVerified: true
          enabled: true
          firstName: My Firstname 1
          lastName: My Lastname 1
          groups:
            - group-admins
          credentials:
            - type: password
              value: ${KEYCLOAK_ADMIN_PASSWORD}
        - username: myuser2
          email: myuser2@${CLUSTER_FQDN}
          emailVerified: true
          enabled: true
          firstName: My Firstname 2
          lastName: My Lastname 2
          groups:
            - group-admins
          credentials:
            - type: password
              value: ${KEYCLOAK_ADMIN_PASSWORD}
        - username: myuser3
          email: myuser3@${CLUSTER_FQDN}
          emailVerified: true
          enabled: true
          firstName: My Firstname 3
          lastName: My Lastname 3
          groups:
            - group-users
          credentials:
            - type: password
              value: ${KEYCLOAK_ADMIN_PASSWORD}
        - username: myuser4
          email: myuser4@${CLUSTER_FQDN}
          emailVerified: true
          enabled: true
          firstName: My Firstname 4
          lastName: My Lastname 4
          groups:
            - group-users
            - group-test
          credentials:
            - type: password
              value: ${KEYCLOAK_ADMIN_PASSWORD}
postgresql:
  enabled: false
externalDatabase:
  host: cnpg-db01-rw.cnpg-db01.svc.cluster.local
  port: 5432
  user: ${CNPG_DB01_KEYCLOAK_USERNAME}
  database: keycloak
  password: ${CNPG_DB01_KEYCLOAK_PASSWORD}
