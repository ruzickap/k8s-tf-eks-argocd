AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ClusterFQDN:
    Description: Name of the S3 bucket (Usually Cluster FQDN)
    Type: String
    Default: mycluster.mylabs.com

Resources:
  TerraformRemoteStateS3Bucket:
    # checkov:skip=CKV_AWS_18:Access logging is not needed for S3 bucket used by Terraform
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub "${ClusterFQDN}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      Tags:
        - Key: Name
          Value: terrraform-remote-state-s3-bucket
  TerraformRemoteStateS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: TerraformRemoteStateS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # S3 Bucket policy does not deny HTTP requests
          - Sid: ForceSSLOnlyAccess
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformRemoteStateS3Bucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformRemoteStateS3Bucket}/*"
            Condition:
              Bool:
                aws:SecureTransport: "false"
          # S3 Bucket policy does not deny TLS version lower than 1.2
          - Sid: EnforceTLSv12orHigher
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformRemoteStateS3Bucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformRemoteStateS3Bucket}/*"
            Condition:
              NumericLessThan:
                s3:TlsVersion: 1.2

  TerraformRemoteStateLockDynamoDBTable:
    # checkov:skip=CKV_AWS_28:Ensure Dynamodb point in time recovery (backup) is enabled
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TableName: !Sub "${ClusterFQDN}"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: alias/aws/dynamodb
      Tags:
        - Key: Name
          Value: terrraform-remote-state-lock-table

Outputs:
  TerraformRemoteStateS3Bucket:
    Value: !Ref TerraformRemoteStateS3Bucket
  TerraformRemoteStateLockDynamoDBTable:
    Value: !Ref TerraformRemoteStateLockDynamoDBTable
